defmodule Dec64Test do
  use ExUnit.Case
  use ExUnit.Parameterized
  doctest Dec64

  @minnum <<1::56, -127>>
  @negative_minnum <<-1::56, -127>>

  test "new has the right size" do
    assert bit_size(Dec64.new(1 ,1)) == 64
  end

  test_with_params "new dec64",
    fn (c, e, expected) ->
      assert expected == Dec64.new(c, e)
    end do
      [
        # coefficient, exponent, expected
        {0, 0, <<0::64>>},
        {0, 0, Dec64.zero},
        {1, 0, <<0x100::64>>},
        {1, 0, Dec64.one},
        {0, 1000, Dec64.zero},
        {0, -1000, Dec64.zero},
        {-1, 127, <<-1::56, 127>>},
        {-1, 128, <<-10::56, 127>>},
        {1, -128, Dec64.zero},
        {-1, 143, <<-10000000000000000::56, 127>>},
        {-1, 144, Dec64.nan},
        {10, -128, @minnum},
        {100, -129, @minnum},
        {10000000000000001, -16, <<10000000000000001::56, -16>>},
        { 36028797018963967, 0,  <<36028797018963967::56, 0>>},
        {-36028797018963967, 0, <<-36028797018963967::56, 0>>},
        {36028797018963967, -128, <<3602879701896397::56, -127>>},
        {36028797018963967, -129, <<360287970189640::56, -127>>},
        {36028797018963967, -130, <<36028797018964::56, -127>>},
        {36028797018963967, -131, <<3602879701896::56, -127>>},
        {36028797018963967, -132, <<360287970190::56, -127>>},
        {36028797018963967, -133, <<36028797019::56, -127>>},
        {36028797018963967, -134, <<3602879702::56, -127>>},
        {36028797018963967, -135, <<360287970::56, -127>>},
        {36028797018963967, -136, <<36028797::56, -127>>},
        {36028797018963967, -137, <<3602880::56, -127>>},
        {36028797018963967, -138, <<360288::56, -127>>},
        {36028797018963967, -139, <<36029::56, -127>>},
        {36028797018963967, -140, <<3603::56, -127>>},
        {36028797018963967, -141, <<360::56, -127>>},
        {36028797018963967, -142, <<36::56, -127>>},
        {36028797018963967, -143, <<4::56, -127>>},
        {36028797018963967, -144, Dec64.zero},
        {360287970189639670, 0, <<36028797018963967::56, 1>>},
        {-360287970189639670, 0, <<-36028797018963967::56,1>>},
        {3602879701896396700, 0, <<36028797018963967::56, 2>>},
        {-3602879701896396700, 0, <<-36028797018963967::56, 2>>},
        {3602879701896396701, 0, <<36028797018963967::56, 2>>},
        {-3602879701896396701, 0, <<-36028797018963967::56, 2>>},
        {360287970189639674, 0, <<36028797018963967::56, 1>>},
        {-360287970189639674, 0, <<-36028797018963967::56, 1>>},
        {3602879701896396740, 0, <<36028797018963967::56, 2>>},
        {-3602879701896396740, 0, <<-36028797018963967::56, 2>>},
        {3602879701896396749, 0, <<36028797018963967::56, 2>>},
        {-3602879701896396749, 0, <<-36028797018963967::56, 2>>},
        {-360287970189639675, 0, <<-36028797018963968::56, 1>>},
        {360287970189639675, 0, <<3602879701896397::56, 2>>},
        {-3602879701896396750, 0, <<-36028797018963968::56, 2>>},
        {3602879701896396750, 0, <<3602879701896397::56, 3>>},
        {-36028797018963968, 0, <<-36028797018963968::56, 0>>},
        {-36028797018963968, -147, Dec64.zero},
        {-3602879701896396800, 0, <<-36028797018963968::56, 2>>},
        {3602879701896396800, 0, <<3602879701896397::56, 3>>},
        {4611686018427387903, 0, <<4611686018427388::56, 3>>},
        {-4611686018427387903, 0, <<-4611686018427388::56, 3>>},
        {9223372036854775499, 0, <<9223372036854775::56, 3>>},
        {-9223372036854775499, 0, <<-9223372036854775::56, 3>>},
        {3689348814741910499, 0, <<3689348814741910::56, 3>>},
        {-3689348814741910499, 0, <<-3689348814741910::56, 3>>},
        # The original test was this, but a converted asm for nasm
        # shows that it's wrong
        #{-368934881474191049, 0, <<-368934881474191::56, 3>>},
        # This seems the right test. Will check with a windows
        # system later.
        {-368934881474191049, 0, <<-3689348814741910::56, 2>>},
        {-36893488147419104, 0, <<-3689348814741910::56, 1>>},
        {49, -129, Dec64.zero},
        {50, -129, @minnum},
        {-444444444444444444, 0, <<-4444444444444444::56, 2>>},
        {-4444444444444444444, 0, <<-4444444444444444::56, 3>>},
        {500000000000, -139, @minnum},
        {-500000000000, -139, @negative_minnum},
        {5000000000000000000, -145, <<5::56, 0x81>>},
        {-5000000000000000000, -146, @negative_minnum},
        {-5555555555555555, 0, <<-5555555555555555::56, 0>>},
        {-55555555555555555, 0, <<-5555555555555556::56, 1>>},
        {-555555555555555555, 0, <<-5555555555555556::56, 2>>},
        {-5555555555555555555, 0, <<-5555555555555556::56, 3>>},
        {-5555555555555554, 0, <<-5555555555555554::56, 0>>},
        {-55555555555555554, 0, <<-5555555555555555::56, 1>>},
        {576460752303423487, 0, <<5764607523034235::56, 2>>},
        {-576460752303423487, 0, <<-5764607523034235::56, 2>>},
        {72057594037927935, 0, <<7205759403792794::56, 1>>},
        {-72057594037927935, 0, <<-7205759403792794::56, 1>>},
        {9223372036854775807, 0, <<9223372036854776::56, 3>>},
        {-9223372036854775807, 0, <<-9223372036854776::56, 3>>},
        {-9223372036854775807, 124, <<-9223372036854776::56, 127>>},
        {-9223372036854775807, 125, Dec64.nan},
        {-9223372036854775807, -132, <<-92233720368548::56, 0x81>>},
        {-9223372036854775807, -133, <<-9223372036855::56, 0x81>>},
        {9223372036854775807, -143, <<922::56, -127>>},
        {9223372036854775807, -144, <<92::56, -127>>},
        {-9223372036854775807, -145, <<-9::56, 0x81>>},
        {9223372036854775807, -145, <<9::56, -127>>},
        {-9223372036854775807, -146, <<-1::56, 0x81>>},
        {9223372036854775807, -146, <<1::56, -127>>}
      ]
    end
end
